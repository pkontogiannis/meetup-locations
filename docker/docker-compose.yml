version: '3.5'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ADVERTISED_HOST: zookeeper
      ADVERTISED_PORT: 2181
    extra_hosts:
      - "moby:127.0.0.1"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ADVERTISED_HOST: kafka
    extra_hosts:
      - "moby:127.0.0.1"

  postgres:
    image: postgres:latest
    ports:
      - "5442:5432"
    environment:
      - POSTGRES_DB=meetup
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  collector:
    image: collector:latest
    environment:
      KAFKA_SERVER: "kafka:9092"
      ZOOKEEPER_SERVER: zookeeper:2181
    restart: always
    depends_on:
      - kafka

  storage:
    image: storage:latest
    restart: always
    environment:
      POSTGRES_SERVER_NAME: "postgres"
      POSTGRES_SERVER_PORT: 5432
      POSTGRES_DB_NAME: "meetup"
      KAFKA_SERVER: "kafka:9092"
      ZOOKEEPER_SERVER: zookeeper:2181
    depends_on:
      - postgres

  processor:
    image: processor:latest
    restart: always
    environment:
      KAFKA_SERVER: "kafka:9092"
      ZOOKEEPER_SERVER: zookeeper:2181
    depends_on:
      - storage

  api:
    image: api:latest
    environment:
      API_SERVER_HOST: api
      POSTGRES_SERVER_NAME: "postgres"
      POSTGRES_SERVER_PORT: 5432
      POSTGRES_DB_NAME: "meetup"
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - postgres
